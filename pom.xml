<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ogr.nutz</groupId>
  <artifactId>sensor</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
    <!--版本控制-->
  <properties> 
    <nutz.version>1.r.61</nutz.version> 
</properties> 
  
    <dependencies>
	<dependency>
	  <groupId>javassist</groupId>
	  <artifactId>javassist</artifactId>
	  <version>3.8.0.GA</version>
	</dependency>


    <!-- nutz框架-->
	<dependency>
	    <groupId>org.nutz</groupId>
	    <artifactId>nutz</artifactId>
	    <version>${nutz.version}</version>
	</dependency>
	<dependency>
    <groupId>com.alibaba</groupId>
    <artifactId>druid</artifactId>
    <version>1.0.26</version>
    <exclusions>
        <exclusion>
            <artifactId>jconsole</artifactId>
            <groupId>com.alibaba</groupId>
        </exclusion>
        <exclusion>
            <artifactId>tools</artifactId>
            <groupId>com.alibaba</groupId>
        </exclusion>
    </exclusions>
</dependency>

   <!--数据库mysql-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.40</version>
        </dependency>
   <!-- Servlet API-->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>4.0.0-b05</version>
		</dependency>
  <!--添加slf4j-->
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>1.7.25</version>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-log4j12</artifactId>
		    <version>1.7.25</version>
		</dependency>
  <dependency>
    <groupId>commons-codec</groupId>
    <artifactId>commons-codec</artifactId>
    <version>1.3</version>
</dependency>
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>4.5.3</version>
</dependency>
<!--json-lib-->    
	<dependency>    
	    <groupId>net.sf.json-lib</groupId>    
	    <artifactId>json-lib</artifactId>    
	    <version>2.4</version>    
	    <classifier>jdk15</classifier>    
	</dependency>  	
	<dependency>
	    <groupId>net.sf.flexjson</groupId>
	    <artifactId>flexjson</artifactId>
	    <version>3.3</version>
	</dependency>
<!--添加junit 框架-->
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.7</version>
	</dependency>
<dependency>
    <groupId>org.apache.httpcomponents</groupId>
    <artifactId>httpclient</artifactId>
    <version>4.4.1</version>
</dependency>
<dependency>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-jar-plugin</artifactId>
    <version>3.0.2</version>
</dependency>

<!--配置jstl jstl算是在jsp中最常用的标签库了吧-->
		<dependency>
		    <groupId>javax.servlet.jsp.jstl</groupId>
		    <artifactId>javax.servlet.jsp.jstl-api</artifactId>
		    <version>1.2.1</version>
		</dependency>
        <dependency>
		    <groupId>org.apache.taglibs</groupId>
		    <artifactId>taglibs-standard-impl</artifactId>
		    <version>1.2.5</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.taglibs</groupId>
		    <artifactId>taglibs-standard-spec</artifactId>
		    <version>1.2.5</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.taglibs</groupId>
		    <artifactId>taglibs-standard-jstlel</artifactId>
		    <version>1.2.5</version>
		</dependency>
  <!-- Quartz -->
<!-- 定时(计划)任务的事实标准 -->
<dependency>
    <groupId>org.quartz-scheduler</groupId>
    <artifactId>quartz</artifactId>
    <version>2.3.0</version>
</dependency>
<!-- nutz集成quartz的插件 -->
<dependency>
    <groupId>org.nutz</groupId>
    <artifactId>nutz-integration-quartz</artifactId>
    <version>1.r.60.r2</version>
</dependency>
    	<!-- beetl模板引擎 -->
<dependency>
    <groupId>com.ibeetl</groupId>
    <artifactId>beetl</artifactId>
    <version>2.7.21</version>
</dependency>
<!--单元测试-->
  <dependency>
        <groupId>org.nutz</groupId>
        <artifactId>nutz-plugins-mock</artifactId>
        <version>1.r.60</version>
        <scope>test</scope>
  </dependency> 
		<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>4.12</version>
	    <scope>test</scope>
	</dependency>
    <!-- 可选, 安利一下mockito,模拟mock对象很方便 -->
    <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.6.3</version>
        <scope>test</scope>
    </dependency>	
</dependencies>
<build>  
<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<finalName>sensor</finalName>  
        <plugins>  
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<excludes>
								<exclude>src/main/resources/**</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
					<warSourceExcludes>WEB-INF/classes/cn/**</warSourceExcludes>
					<webResources>
						<resource>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<includes>
								<include>**</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
            <plugin>  
            <groupId>org.apache.maven.plugins</groupId>  
            <artifactId>maven-compiler-plugin</artifactId>  
            <version>3.1</version>  
            <configuration>  
                <source>1.8</source>  
                <target>1.8</target>  
                <compilerId>eclipse</compilerId>  
            </configuration>  
     <!--       <dependencies>  
                <dependency>  
                    <groupId>org.codehaus.plexus</groupId>  
                    <artifactId>plexus-compiler-eclipse</artifactId>  
                    <version>2.2</version>  
                </dependency>  
            </dependencies>  -->
        </plugin>  
            <plugin>  
                <artifactId>maven-jar-plugin</artifactId>  
                <executions>  
                    <execution>  
                        <goals>  
                            <goal>jar</goal>  
                        </goals>  
                        <phase>package</phase>  
                    </execution>  
                </executions>  
            </plugin>
		
        </plugins>  
  
        <extensions>  
            <extension>  
                <groupId>org.apache.maven.wagon</groupId>  
                <artifactId>wagon-ssh-external</artifactId>  
                <version>2.9</version>  
            </extension>  
        </extensions>  
    </build>  
</project>